@page "/Login"
@using CentroEventos.Aplicacion.Validators
@using CentroEventos.UI.Components.Layout
@using CentroEventos.UI.Components.Pages.Shared
@inject Aplicacion.Interfaces.IRepositorioUsuario RepoUsuario
@inject NavigationManager Navigation
@inject ISnackbar Snackbar
@layout LoginLayout

<MudContainer MaxWidth="MaxWidth.Small" Class="d-flex justify-center align-center" Style="height: 100vh;">
    <MudPaper Elevation="25" Class="pa-8 login-paper">
        <MudStack Class="align-center" Spacing="4">
            <MudAvatar Color="Color.Primary" Class="login-avatar">
                <MudIcon Icon="@Icons.Material.Filled.Person" Size="Size.Large" />
            </MudAvatar>
            <MudText Typo="Typo.h4" Class="mb-4">Bienvenido</MudText>
            <FormularioUsuario
                TipoFormulario="login"
                OnSubmitCallback="OnLoginExitoso"
                OnError="OnLoginError" />
            
            <MudDivider Class="my-4"/>
            
            <MudButton Variant="Variant.Text" 
                       Color="Color.Primary"
                       OnClick="IrARegistro">
                ¿No tienes cuenta? Regístrate aquí
            </MudButton>
        </MudStack>
    </MudPaper>
</MudContainer>

<style>
    .login-paper {
        width: 500px;
        backdrop-filter: blur(10px);
        background-color: rgba(255,255,255,0.8);
    }
    .login-avatar {
        width: 80px;
        height: 80px;
    }
</style>

@code {

    private void IrARegistro()
    {
        Navigation.NavigateTo("/registro");
    }

    private async Task OnLoginExitoso((string Email, string Password) datos)
    {
        var usuario = RepoUsuario.ObtenerPorEmail(datos.Email);

        if (usuario == null)
        {
            Snackbar.Add("Usuario no encontrado.", Severity.Error);
            return;
        }

        if (usuario.Contrasena != datos.Password)
        {
            Snackbar.Add("Contraseña incorrecta.", Severity.Error);
            return;
        }

        Snackbar.Add("Inicio de sesión exitoso", Severity.Success);
        await Task.Delay(1000);
        Navigation.NavigateTo("/Index", true);
    }
    
    private void OnLoginError(string mensaje)
    {
        Snackbar.Add(mensaje, Severity.Error);
    }
}