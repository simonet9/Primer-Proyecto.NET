
@using System.ComponentModel.DataAnnotations
@using CentroEventos.Aplicacion.UseCases.Personas
@using CentroEventos.Aplicacion.Entities

            <MudForm @ref="_form" Model="_modelo">
                <MudText Typo="Typo.h5" Align="Align.Center" Class="mb-4">Crear Nueva Persona</MudText>
                <MudGrid Spacing="3">
                    <MudItem xs="12">
                        <MudTextField T="string" @bind-Value="_modelo.Dni" Label="DNI" Required="true"
                                    RequiredError="El DNI es requerido" Variant="Variant.Outlined"
                                    Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Badge"
                                    AdornmentColor="Color.Primary" />
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudTextField T="string" @bind-Value="_modelo.Nombre" Label="Nombre" Required="true"
                                    RequiredError="El nombre es requerido" Variant="Variant.Outlined"
                                    Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Person"
                                    AdornmentColor="Color.Primary" />
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudTextField T="string" @bind-Value="_modelo.Apellido" Label="Apellido" Required="true"
                                    RequiredError="El apellido es requerido" Variant="Variant.Outlined"
                                    Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Person"
                                    AdornmentColor="Color.Primary" />
                    </MudItem>
                    <MudItem xs="12">
                        <MudTextField T="string" @bind-Value="_modelo.Email" Label="Correo Electrónico" Required="true"
                                    RequiredError="El correo es requerido" Variant="Variant.Outlined"
                                    InputType="InputType.Email" Adornment="Adornment.Start"
                                    AdornmentIcon="@Icons.Material.Filled.Email"
                                    AdornmentColor="Color.Primary" />
                    </MudItem>
                    <MudItem xs="12">
                        <MudTextField T="string" @bind-Value="_modelo.Telefono" Label="Teléfono"
                                    Variant="Variant.Outlined"
                                    Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Phone"
                                    AdornmentColor="Color.Primary" />
                    </MudItem>
                    <MudItem xs="12">
                        <MudButton Variant="Variant.Filled"
                                Color="Color.Primary"
                                FullWidth="true"
                                Size="Size.Large"
                                OnClick="ProcesarFormulario"
                                Disabled="_procesando"
                                Class="mt-4 py-2">
                            @if (_procesando)
                            {
                                <MudProgressCircular Size="Size.Small" Indeterminate="true" Class="me-2"/>
                            }
                            else
                            {
                                @("Crear Persona")
                            }
                        </MudButton>
                    </MudItem>
                </MudGrid>
            </MudForm>

@code {
    [Parameter] public EventCallback<(string DNI, string Nombre, string Apellido, string Email, string Telefono)> OnGuardar { get; set; }
    [Parameter] public EventCallback<string> OnError { get; set; }
    private MudForm? _form;
    private bool _procesando;
    private readonly FormularioPersonaModel _modelo = new();

    private async Task ProcesarFormulario()
    {
        if (_form != null)
        {
            await _form.Validate();
            if (!_form.IsValid)
                return;
        }

        try
        {
            _procesando = true;

            await OnGuardar.InvokeAsync((_modelo.Dni, _modelo.Nombre, _modelo.Apellido, _modelo.Email, _modelo.Telefono));
        }
        catch (Exception ex)
        {
            await OnError.InvokeAsync(ex.Message);
        }
        finally
        {
            _procesando = false;
        }
    }

    private class FormularioPersonaModel
    {
        [Required(ErrorMessage = "El DNI es requerido")]
        public string Dni { get; set; } = string.Empty;

        [Required(ErrorMessage = "El nombre es requerido")]
        public string Nombre { get; set; } = string.Empty;

        [Required(ErrorMessage = "El apellido es requerido")]
        public string Apellido { get; set; } = string.Empty;

        [Required(ErrorMessage = "El correo es requerido")]
        [EmailAddress(ErrorMessage = "El correo no es válido")]
        public string Email { get; set; } = string.Empty;

        public string Telefono { get; set; } = string.Empty;
    }
}